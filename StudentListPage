StudentListPage
<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:c="clr-namespace:MauiApp1.Dtos"
             x:Class="MauiApp1.StidentListPage"
             Title="StidentListPage">
    <ContentPage.Resources>
        <c:Base64Converter x:Key="Base64Converter"/>
    </ContentPage.Resources>
    <ScrollView>
    <VerticalStackLayout>
            <Button Text="Add Student" Clicked="ASBtn"/>

            <CollectionView x:Name="StudentListView" ItemsSource="{Binding StudentList}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <VerticalStackLayout>
                            <Label Text="{Binding Name}" FontSize="Medium"/>
                                <Label Text="{Binding AdmissionDate}" FontSize="Medium"/>
                                <Label Text="{Binding IsActive}" FontSize="Medium"/>
                                <Image Source="{Binding ImageUrl,Converter={StaticResource Base64Converter}}" HeightRequest="100" WidthRequest="100"/>

                                <Label Text="Addresses" FontSize="Large"/>
                            <CollectionView ItemsSource="{Binding Addresses}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <HorizontalStackLayout>
                                            <Label Text="{Binding City}" />
                                            <Label Text=", " />
                                            <Label Text="{Binding Street}" />
                                        </HorizontalStackLayout>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                            <HorizontalStackLayout Spacing="10">
                                <Button Text="Update"  CommandParameter="{Binding .}"/>
                                <Button Text="Delete" Clicked="DeleteBtn" CommandParameter="{Binding .}"/>
                            </HorizontalStackLayout>
                        </VerticalStackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>

CS
using MauiApp1.Dtos;
using System.Collections.ObjectModel;
using System.Text.Json;

namespace MauiApp1;

public partial class StidentListPage : ContentPage
{
    public ObservableCollection<StudentDto> StudentList { get; set; }=new ObservableCollection<StudentDto>();


    public StidentListPage()
	{
		InitializeComponent();
        BindingContext=this;
        _ = LodeStudent();
	}

    private async Task LodeStudent()
    {
        var client = new HttpClient
        {
            BaseAddress = new Uri
            (DeviceInfo.Platform == DevicePlatform.Android ?
                "http://10.0.2.2:5286" : "http://localhost:5286"
            )
        };

        var res = await client.GetAsync("/api/stu");

        if (res.IsSuccessStatusCode) 
        {
            var student = await res.Content.ReadAsStringAsync();

            StudentList = JsonSerializer.Deserialize<ObservableCollection<StudentDto>>
                (student, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

            if (StudentList != null)
            {
                StudentListView.ItemsSource = StudentList;
            }
            else 
            {
                await DisplayAlert("eror", "Error Occour", "Ok");
            }
        }
    }

    private void ASBtn(object sender, EventArgs e)
    {
		Navigation.PushAsync(new AddStudentPage());
    }

    private async void DeleteBtn(object sender, EventArgs e)
    {
        if (sender is Button button && button.CommandParameter is StudentDto studentDto) 
        {
            bool result = await DisplayAlert("Delete", $"Delete this student {studentDto.Name}", "Yes", "No");
            if (result) 
            {
                var client = new HttpClient
                {
                    BaseAddress = new Uri
                    (DeviceInfo.Platform == DevicePlatform.Android ?
                        "http://10.0.2.2:5286" : "http://localhost:5286"
                    )
                };

                var res = await client.DeleteAsync($"/api/stu/{studentDto.Id}");
                if (res.IsSuccessStatusCode)
                {
                    await DisplayAlert("Succes", "Deleted", "Ok");
                    await Navigation.PushAsync(new StidentListPage());

                }
                else 
                {
                    await DisplayAlert("eror", "Error Occour", "Ok");
                }

            }
        }
    }
}
